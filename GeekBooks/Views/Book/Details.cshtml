@model GeekBooks.Models.BookeModel
@{
    ViewBag.Title = "Details";
}
<h3>Book Details</h3>
<hr />
<div class="row">
    <div class="col-sm-8">

        @* <img src="@Url.Content(item.BookModel.BookCover)" alt="Image" width="150" height="150" />*@
        @*<a href="@Url.Action("Details", "Book", new { id = Model.BookModel.ISBN })" title="@Model.BookModel.Title Detail" class="links">
            <img alt="More Details" src="@Url.Content(Url.Content(Model.BookModel.BookCover))" width="300" height="450">
        </a>
        *@
        <a class="btn" data-toggle="modal" data-target=".bootstrapmodal" title="Click to enlarge">

            <img alt="More Details" src="@Url.Content(Url.Content(Model.BookModel.BookCover))" width="250" height="400">

        </a>
        <div class="modal fade bootstrapmodal">
            <div class="modal-dialog">
                <div class="modal-body">
                    <img alt="More Details" src="@Url.Content(Url.Content(Model.BookModel.BookCover))" width="500" height="750">

                </div>

            </div>

        </div>

        @{
            var Emptyresize = 280;
            var Filledresize = 280.5;
            var StarRatio = (double)Model.reviews * Filledresize / 5;
            var height = 23 * Filledresize / 120;

        }

        <div style="position: relative; width: 200px; height:auto">

            <div id="emptyStars" style="background-image: url('/Content/Images/EmptyStarsHD.png'); width: @Emptyresize.ToString()px; background-size: @Emptyresize.ToString()px">
                  <div id="filledStars" style="background-image: url('/Content/Images/FilledStarsHD.png'); width: @StarRatio.ToString()px; background-size: @Filledresize.ToString()px; height: @height.ToString()px;"> </div>
                 
             </div>
         </div>

    </div>




    <div class="col-sm-4">
        @using (Html.BeginForm("AddBookToShoppingCart", "ShoppingCart"))
        {



            @Html.HiddenFor(b => b.ShoppingCart.ISBN, new { Value = Model.BookModel.ISBN })
            @Html.HiddenFor(b => b.ShoppingCart.Username, new { Value = Session["Username"] })
            @Html.HiddenFor(b => b.ShoppingCart.Quantity, new { Value = 1 })
            @Html.HiddenFor(b => b.ShoppingCart.PriceEach, new { Value = Model.BookModel.Price })

            <button type="submit" class="btn btn-primary w-50">Add To Cart</button>


        }
        <p></p>




        <p>
           
            @Html.ActionLink("Create a Review", "CreateReview", "Review", new { id = Model.BookModel.ISBN }, new { @class = "btn btn-primary w-50" }) <br /> <br />
        </p>



        @using (Html.BeginForm("AddBookToWishlist", "Account"))
        {
            <div class="form-group">
                @Html.LabelFor(b => b.WishlistBook.WishlistName)
                @Html.DropDownListFor(b => b.WishlistBook.WishlistName, new SelectList(Model.Wishlists, "WishlistName", "WishlistName"), "Select Wishlist", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(b => b.WishlistBook.Quantity)
                @Html.TextBoxFor(b => b.WishlistBook.Quantity, new { Value = 1 , @class = "form-control" } )
            </div>
            @Html.HiddenFor(b => b.WishlistBook.ISBN, new { Value = Model.BookModel.ISBN })
            @Html.HiddenFor(b => b.WishlistBook.Username, new { Value = Model.username })

            <button type="submit" class="btn btn-primary w-50">Add To Wishlist</button>
        }
        <p></p>
        @Html.ActionLink("Back to List", "Index")
    </div>



    <div class="row">

        <div class="col-md-6">
            <hr align="left" width="350" />
            <dl align="left">

                <dd>
                    <b>@Html.DisplayName("Title: ")</b>
                    @Html.DisplayFor(model => model.BookModel.Title)
                </dd>


                <dd>
                    <b>@Html.DisplayName("Price: ")</b>

                    $@Html.DisplayFor(model => model.BookModel.Price)
                </dd>


                <dd>
                    <b>@Html.DisplayName("Genre: ")</b>

                    @Html.DisplayFor(model => model.BookGenreModel.GenreName)
                </dd>



                <dd>
                    <b>@Html.DisplayName("Publisher: ")</b>

                    @Html.DisplayFor(model => model.BookModel.PublisherName)
                </dd>


                <dd>
                    <b>@Html.DisplayName("Date Published: ")</b>

                    @Html.DisplayFor(model => model.BookModel.DatePublished)
                </dd>


                <dd>
                    <b>@Html.DisplayName("Author Name: ")</b>
                    @*
            @Html.DisplayFor(model => model.AuthorModel.AuthorFirst)
            @Html.DisplayFor(model => model.AuthorModel.AuthorMiddle)
            @Html.DisplayFor(model => model.AuthorModel.AuthorLast)
                    *@
                    <a href="@Url.Action("Index", "Book", new { authorID = Model.AuthorModel.AuthorID,  })" title="More books from @Html.DisplayFor(model => model.AuthorModel.AuthorFirst) @Html.DisplayFor(model => model.AuthorModel.AuthorMiddle) @Html.DisplayFor(model => model.AuthorModel.AuthorLast)" class="links">

                        @Html.DisplayFor(model => model.AuthorModel.AuthorFirst)
                        @Html.DisplayFor(model => model.AuthorModel.AuthorMiddle)
                        @Html.DisplayFor(model => model.AuthorModel.AuthorLast)

                    </a>
                </dd>

                <dd>
                    @*
        the part below is what I made for the comment selection. It loops in case if its a null
                    *@
                    <br />
                    <br />
                    <h2>@Html.DisplayName("Comments: ")</h2>
                    <br />
                    @foreach (Review review in Model.ReviewModel)
                    {
                        if (!string.IsNullOrEmpty(review.Comment))
                        {

                           
                                var Ers = 120;
                                var Frs = 120.5;
                                var StarR = (double) review.Rating * Frs / 5;
                                var h = 23 * Frs / 120;

                            <hr />
                            <b>@review.Username</b>
                            <br />
                            <div style="position: relative; width: 200px; height:auto">

                                <div id="emptyStars" style="background-image: url('/Content/Images/EmptyStarsHD.png'); width: @Ers.ToString()px; background-size: @Ers.ToString()px">
                                    <div id="filledStars" style="background-image: url('/Content/Images/FilledStarsHD.png'); width: @StarR.ToString()px; background-size: @Frs.ToString()px; height: @h.ToString()px;"> </div>

                                </div>
                            </div>
                            <p>@review.DatePosted</p>
                            <br />
                            @review.Comment
                            <br />
                            <br />
                        }
                    }
                </dd>


            </dl>

        </div>


        <div class="col-md-6">

            <br />
            <span class="A">
                <b>@Html.DisplayName("Description: ")</b>

                @Html.DisplayFor(model => model.BookModel.BookDescription)
            </span>



            <span class="A">
                <b>@Html.DisplayName("Author Bio: ")</b>

                @Html.DisplayFor(model => model.AuthorModel.Bio)
            </span>
        </div>



    </div>


</div>
<style>

    span.A {
        display: block;
        width: 300px;
        height: 100px;
        padding: 5px;
        background-color: white;
    }
</style>