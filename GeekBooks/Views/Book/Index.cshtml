@using PagedList
@using PagedList.Mvc
@model PagedList.IPagedList<GeekBooks.Models.BookeModel>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Book List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Browse our books</h2>
<p>
    @using (Html.BeginForm("Index", "Book", new { removeGenre = "", rating = 0 }))
    {
        @*<p>
                Genre: @Html.DropDownList("bookGenre")
                Title: @Html.TextBox("SearchString")
                <input type="submit" value="Search" />
            </p>*@


        <form action="/Index/?SearchString="></form>
        @*
            <form asp-controller="Book" asp-action="Index" method="get" style="display: inline;">
                <input name="SearchString" class="myInput" placeholder="Search for book name" />
                <a asp-action="SearchString"></a>
            </form>
        *@


        <div display="inline">
            <div class="SearchBar">
                <div class="dropdown">
                    <button onclick="myFunction()" class="dropbtn">Title</button>
                    <form asp-controller="Book" asp-action="Index" method="get" style="display: inline-block">
                        <input name="SearchString" class="myInput" placeholder="Search our repository">
                        <a asp-action="bookGenre"></a>
                        <input type="image" class="searchIcon" src="~/Content/Images/SearchIconBlue.png" value="Submit" style="width: 45px; height: auto;" />
                    </form>
                    <div id="myDropdown" class="dropdown-content">
                        <a onclick="changeName('SearchString')">Title</a>
                        <a onclick="changeName('bookGenre')">Genre</a>
                    </div>
                </div>
            </div>

           <div class="stuff" style="display:inline">
               @*
                <a id="GenreButton" style="cursor:pointer; border: none; outline:none; padding: 10px 16px; background-color: #f1ec1d; font-size: 15px; width: 18px;
                  display: inline; " onclick="location.href = '@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               rating = ViewBag.Rating,
                                                               TopSeller = 1
                                                           })'">Top Sellers</a>
                *@

                <a href="@Url.Action("Index", "Book", new { currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               rating = ViewBag.Rating,
                                                               TopSeller = 1 })"
                   title="View our top sellers" class="links">
                    <img alt="More Details" src="~/Content/Images/TopSellerRibbon.png" style=" width: 80px; height: auto;">
                </a>


                <div class="rating" style="width: 100px; height: auto; display: inline; background-size: 100px; position: relative; left: 50px;>
">
                    <i class="fa fa-star" aria-hidden="true" id="s5" data-toggle="tooltip" data-placement="bottom" onclick="location.href = '@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               TopSeller = ViewBag.TopSeller,
                                                               rating = 5
                                                           })'"></i>
                    <i class="fa fa-star" aria-hidden="true" id="s4" data-toggle="tooltip" data-placement="bottom" onclick="location.href = '@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               TopSeller = ViewBag.TopSeller,
                                                               rating = 4
                                                           })'"></i>
                    <i class="fa fa-star" aria-hidden="true" id="s3" data-toggle="tooltip" data-placement="bottom" onclick="location.href = '@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               TopSeller = ViewBag.TopSeller,
                                                               rating = 3
                                                           })'"></i>
                    <i class="fa fa-star" aria-hidden="true" id="s2" data-toggle="tooltip" data-placement="bottom" onclick="location.href = '@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               TopSeller = ViewBag.TopSeller,
                                                               rating = 2
                                                           })'"></i>
                    <i class="fa fa-star" aria-hidden="true" id="s1" data-toggle="tooltip" data-placement="bottom" onclick="location.href = '@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               TopSeller = ViewBag.TopSeller,
                                                               rating = 1
                                                           })'"></i>
                </div>
            </div>

        </div>

        <br />
        <br />
        <br />

       




        <script type="text/javascript">

            //Star rating functionality jquery by IDs and font-awesome css class
            $(document).ready(function () {
                                var colorStar = "grey";
                $('#s1').click(function () {
                    $('.fa-star').css("color", colorStar);
                    $('#s1').css("color", "orange");
                    $('#rate').text('1/5');
                    $('#rateBox').val(1);
                                });
                $('#s2').click(function () {
                    $('.fa-star').css("color", colorStar);
                    $('#s1, #s2').css("color", "orange");
                    $('#rate').text('2/5');
                    $('#rateBox').val(2);
                                });
                $('#s3').click(function () {
                    $('.fa-star').css("color", colorStar);
                    $('#s1, #s2, #s3').css("color", "orange");
                    $('#rate').text('3/5');
                    $('#rateBox').val(3);
                                });
                $('#s4').click(function () {
                    $('.fa-star').css("color", colorStar);
                    $('#s1, #s2, #s3, #s4').css("color", "orange");
                    $('#rate').text('4/5');
                    $('#rateBox').val(4);
                                });
                $('#s5').click(function () {
                    $('.fa-star').css("color", colorStar);
                    $('#s1, #s2, #s3, #s4, #s5').css("color", "orange");
                    $('#rate').text('5/5');
                    $('#rateBox').val(5);
                                });

                            });

            $(document).ready(function () {
                                var g = "blue";
                                var b = "black";

                $("#aBox").change(function () {
                                    var checked = $(this).is(':checked');
                                    if (!checked) {
                        $("#nBox").attr("value", "true");
                        $("#nBox").attr('disabled', false);
                        $("#nBox").attr("style", "cursor: pointer");
                        $("#nLabel").css("color", b);
                        $("#aLabel").css("color", b);
                                    }
                                    else {
                        $("#nBox").attr("value", "false");
                        $("#nBox").attr('disabled', true);
                        $("#nBox").attr("style", "cursor: not-allowed");
                        $("#nLabel").css("color", "gray");
                        $("nBox").css("cursor", "not-allowed");
                        $("#aLabel").css("color", g);
                                    }
                                    });

                $("#nBox").change(function () {
                                        var checked = $(this).is(':checked');
                                        if (!checked) {
                        $("#aBox").attr("value", "true");
                        $("#aBox").attr('disabled', false);
                        $("#aBox").attr("style", "cursor: pointer");
                        $("#aLabel").css("color", b);
                        $("#nLabel").css("color", b);
                                        }
                                        else {
                        $("#aBox").attr("value", "false");
                        $("#aBox").attr('disabled', true);
                        $("#aBox").attr("style", "cursor: not-allowed");
                        $("#aLabel").css("color", "gray");
                        $("aBox").css("cursor", "not-allowed");
                        $("#nLabel").css("color", g);
                                        }
                                        });

                $()

            });

            //bootstrap tooltip for star rating
            $(document).ready(function () {
                $('[data-toggle="tooltip"]').tooltip();
                                    });

        </script>

        <style>


            /*Invert css star hovers*/
            .rating {
                                    color: grey;
                                        unicode-bidi: bidi-override;
                direction: rtl;
            }

                /*Colors the previous stars on hover*/
                .rating > i:hover:before,
                .rating > i:hover ~ i:before {
                    color: rgb(209, 136, 0);
                    cursor: pointer;
                }

            /*Increase the size of the stars*/
            .fa-star {
                font-size: 30px;
            }

   
            /*On submit button active, translate it down to give it a 3D effect*/
            #button1:active {
                background-color: #ce4414;
                box-shadow: 0 5px #667;
                transform: translateY(4px);
            }

          
        </style>



        <script>
            /* When the user clicks on the button,
            toggle between hiding and showing the dropdown content */
            function myFunction() {
                    document.getElementById("myDropdown").classList.toggle("show");
                }




                window.onclick = function (event) {
                    if (!event.target.matches('.dropbtn')) {
                        var dropdowns = document.getElementsByClassName("dropdown-content");
                        // var myDropdowns = document.getElementById("myDropdown");
                        var i;
                        for (i = 0; i < dropdowns.length; i++) {
                            var openDropdown = dropdowns[i];
                            if (openDropdown.classList.contains('show')) {
                                openDropdown.classList.remove('show');
                            }


                        }


                    }
                }

                function changeName(e) {

                    var dropbtn = document.getElementsByClassName("dropbtn");
                    var searchBar = document.getElementsByClassName("myInput")[0];
                    if (e == 'SearchString') {
                        dropbtn[0].innerHTML = 'Title';
                        searchBar.placeholder = "Search by Title";
                        searchBar.style.padding = '12px 20px 12px 94px';
                    }
                    if (e == 'bookGenre') {

                        dropbtn[0].innerHTML = 'Genre';
                        searchBar.placeholder = "Search by Genre";
                        searchBar.style.padding = '12px 20px 12px 106px';
                    }


                    searchBar.name = e;
                };





        </script>

    }

    <style>









        .resize {
            width: 45px;
            height: auto;
            display: inline-block
        }

        .searchIcon {
            position: relative;
            top: 16px;
            right: 5px;
        }

        .dropbtn {
            position: absolute;
            top: 20px;
            display: inline;
            background-color: #d4d4d4;
            border-color: #808080;
            color: black;
            padding: 8px 23px 7px 23px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

            .dropbtn:hover, .dropbtn:focus {
                background-color: #c2c2c2;
            }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: white;
            min-width: 160px;
            overflow: auto;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
                z-index: 1;
        }

            .dropdown-content a {
                    color: black;
                    padding: 12px 16px;
                    text-decoration: none;
                    display: block;
                }

        .dropdown a:hover {
            background-color: #d4d4d4;
        }

        .show {
            display: block;
        }

        .myInput {
            display: inline;
            background-position: 8px 12px;
            background-repeat: no-repeat;
            width: 200%;
            height: 40px;
            font-size: 16px;
            border: 1px solid #ddd;
            padding: 12px 20px 12px 94px;
            margin-bottom: 12px;
        }
    </style>




    @using GeekBooks.Controllers

    @*

        location.href='@Url.Action("Index", "Book", new
                                                           {
                    currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               removeGenre = @item
                                                           })'




    *@

    @foreach (var item in GeekBooks.Controllers.BookController.GenreList)

    {

        var change = "";
        var color = "#e0e0e0";
        if (GeekBooks.Controllers.BookController.gL.Contains(item))
        {
            change = "×";
            color = "#e86b2b";
        }
        else
        {
            change = "";
            color = "#e0e0e0";
        }
        <div id="GenreForm" style="display: inline">
            <a id="Xbutton" aria-label="Close Account Info Modal Box" style="position:absolute; border: 5px; width: 20px; height: auto; cursor: pointer;"
               onclick="location.href='@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               removeGenre = @item,
                                                               TopSeller = ViewBag.TopSeller,
                                                               rating = ViewBag.Rating
                                                           })'">@change</a>
                                                        <a id="GenreButton" style="cursor:pointer; border: none; outline:none; padding: 10px 16px; background-color: @color; font-size: 15px; width: 18px;
                  display: inline;" onclick="location.href='@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               TopSeller = ViewBag.TopSeller,
                                                               rating = ViewBag.Rating,
                                                               bookGenre = @item
                                                           })'">@item</a>
                                                    </div>

                                                    <script>

                                                        var Xbutton = document.getElementById("Xbutton");
                                                        //  var button = document.getElementById("GenreButton");
                                                        //  var form = document.getElementById("GenreForm");

                                                        if (Xbutton.innerHTML == "") {
                                                            form.removeAttribute(Xbutton);
                                                        }



                                                    </script>



                                                }



    </br>
    </br>



    <!--To Do: Implement browsing features-->
    <table class="table">
        <tr>
            <th>
            </th>
            <th>
                @Html.ActionLink("Title", "Index", new
           {
               sortOrder = ViewBag.TitleSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               TopSeller = ViewBag.TopSeller,
               rating = ViewBag.Rating,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th>
                @Html.ActionLink("Price", "Index", new
           {
               sortOrder = ViewBag.PriceSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               TopSeller = ViewBag.TopSeller,
               rating = ViewBag.Rating,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th>
                @Html.DisplayName("Genre")
            </th>
            <th>
                @Html.ActionLink("Author", "Index", new
           {
               sortOrder = ViewBag.AuthorSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               TopSeller = ViewBag.TopSeller,
               rating = ViewBag.Rating,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th width="170px">
                @Html.ActionLink("Rating", "Index", new
           {
               sortOrder = ViewBag.RatingSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               TopSeller = ViewBag.TopSeller,
               rating = ViewBag.Rating,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th>
                @Html.DisplayName("ISBN")
            </th>
            <th>
                @Html.ActionLink("DatePublished", "Index", new
           {
               sortOrder = ViewBag.DateSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               TopSeller = ViewBag.TopSeller,
               rating = ViewBag.Rating,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th></th>
        </tr>
        @{
            var bookName = "";
        }
        @foreach (var item in Model)
        {


            <tr>
                <td>
                    @* <img src="@Url.Content(item.BookModel.BookCover)" alt="Image" width="150" height="150" />*@
                    @if (Session["Username"] == null)
                    {
                        <a href="@Url.Action("Details", "Book", new { id = item.BookModel.ISBN, username = "guest" })" title="@item.BookModel.Title Detail" class="links">
                            <img alt="More Details" src="@Url.Content(Url.Content(item.BookModel.BookCover))" width="120" height="120">
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("Details", "Book", new { id = item.BookModel.ISBN, username = Session["Username"] })" title="@item.BookModel.Title Detail" class="links">
                            <img alt="More Details" src="@Url.Content(Url.Content(item.BookModel.BookCover))" width="120" height="120">
                        </a>
                    }
                </td>
                <td>
                    @if (Session["Username"] == null)
                    {
                        @Html.ActionLink(item.BookModel.Title, "Details", "Book", new { id = item.BookModel.ISBN, username = "guest" }, null)
                    }
                    else
                    {
                        @Html.ActionLink(item.BookModel.Title, "Details", "Book", new { id = item.BookModel.ISBN, username = Session["Username"] }, null)
                    }
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.BookModel.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.viewGenres)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AuthorModel.AuthorFirst)
                    @Html.DisplayFor(modelItem => item.AuthorModel.AuthorMiddle)
                    @Html.DisplayFor(modelItem => item.AuthorModel.AuthorLast)
                </td>
                @{
                    var Emptyresize = 120;
                    var Filledresize = 120.5;
                    var StarRatio = (double)item.reviews * Filledresize / 5;
                    var height = 23;

                }
                <td>
                    <!--@Html.DisplayFor(modelItem => item.reviews)-->
                    <div id="emptyStars" style="background-image: url('/Content/Images/EmptyStarsHD.png'); width: @Emptyresize.ToString()px; background-size: @Emptyresize.ToString()px">
                        <div id="filledStars" style="background-image: url('/Content/Images/FilledStarsHD.png'); width: @StarRatio.ToString()px; background-size: @Filledresize.ToString()px; height: @height.ToString()px;"> </div>
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookModel.ISBN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookModel.DatePublished)
                </td>
                <td>
                    @using (Html.BeginForm("AddBookToShoppingCart", "ShoppingCart"))
                    {

                        @Html.Hidden("ISBN", item.BookModel.ISBN)
                        @Html.Hidden("controller", "Book")
                        @Html.Hidden("action", "Index")
                        @Html.Hidden("Username", Session["Username"])


                        @Html.Hidden("Quantity", 1)
                        @Html.Hidden("Price", item.BookModel.Price)

                        bookName = item.BookModel.Title;


                        <input type="image" img alt="Add to shopping cart" src="~/Content/Images/AddToCart.png" style=" width: 40px; height: auto;"
                               onclick="bookName('@item.BookModel.Title')">




                    }
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.reviews)
                </td>
            </tr>
        }

    </table>

    <script>


        function bookName(item) {

            alert('' + item + ' item has been added to the shopping cart');

        };


    </script>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    <!--Hard Coded Below-->
    @*
        <a href="~/Book/Details/1">
        <img src="~/Content/Books/sorcerersstone.jpg" alt="sorcerersstone" style="width:256px;height:256px;" />
        </a>
        <ng-view />
        <a href="~/Book/Details/2">
        <img src="~/Content/Books/ChamberOfSecrets.jpg" alt="ChamberOfSecrets" style="width:256px;height:256px;" />
        </a>*@
