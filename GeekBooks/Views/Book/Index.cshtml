@using PagedList
@using PagedList.Mvc
@model PagedList.IPagedList<GeekBooks.Models.BookeModel>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Book List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Browse our books</h2>
<p>
    @using (Html.BeginForm("Index", "Book", new { removeGenre = "" }))
    {
        @*<p>
                Genre: @Html.DropDownList("bookGenre")
                Title: @Html.TextBox("SearchString")
                <input type="submit" value="Search" />
            </p>*@


        <form action="/Index/?SearchString="></form>
        @*
            <form asp-controller="Book" asp-action="Index" method="get" style="display: inline;">
                <input name="SearchString" class="myInput" placeholder="Search for book name" />
                <a asp-action="SearchString"></a>
            </form>
        *@

        <div class="SearchBar">
            <div class="dropdown">
                <button onclick="myFunction()" class="dropbtn">Title</button>
                <form asp-controller="Book" asp-action="Index" method="get" style="display: inline-block">
                    <input name="SearchString" class="myInput" placeholder="Search our repository">
                    <a asp-action="bookGenre"></a>
                    <input type="image" class="searchIcon" src="~/Content/Images/SearchIconBlue.png" value="Submit" style="width: 45px; height: auto;" />
                </form>

                <div id="myDropdown" class="dropdown-content">
                    <a onclick="changeName('SearchString')">Title</a>
                    <a onclick="changeName('bookGenre')">Genre</a>
                </div>

            </div>

        </div>






        <script>
            /* When the user clicks on the button,
            toggle between hiding and showing the dropdown content */
            function myFunction() {
                document.getElementById("myDropdown").classList.toggle("show");
            }




            window.onclick = function (event) {
                if (!event.target.matches('.dropbtn')) {
                    var dropdowns = document.getElementsByClassName("dropdown-content");
                    // var myDropdowns = document.getElementById("myDropdown");
                    var i;
                    for (i = 0; i < dropdowns.length; i++) {
                        var openDropdown = dropdowns[i];
                        if (openDropdown.classList.contains('show')) {
                            openDropdown.classList.remove('show');
                        }


                    }


                }
            }

            function changeName(e) {

                var dropbtn = document.getElementsByClassName("dropbtn");
                var searchBar = document.getElementsByClassName("myInput")[0];
                if (e == 'SearchString') {
                    dropbtn[0].innerHTML = 'Title';
                    searchBar.placeholder = "Search by Title";
                    searchBar.style.padding = '12px 20px 12px 94px';
                }
                if (e == 'bookGenre') {

                    dropbtn[0].innerHTML = 'Genre';
                    searchBar.placeholder = "Search by Genre";
                    searchBar.style.padding = '12px 20px 12px 106px';
                }


                searchBar.name = e;
            };





        </script>

    }


    <style>


        .resize {
            width: 45px;
            height: auto;
            display: inline-block
        }

        .searchIcon {
            position: relative;
            top: 16px;
            right: 5px;
        }

        .dropbtn {
            position: absolute;
            top: 20px;
            display: inline;
            background-color: #d4d4d4;
            border-color: #808080;
            color: black;
            padding: 8px 23px 7px 23px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

            .dropbtn:hover, .dropbtn:focus {
                background-color: #c2c2c2;
            }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: white;
            min-width: 160px;
            overflow: auto;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            .dropdown-content a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
            }

        .dropdown a:hover {
            background-color: #d4d4d4;
        }

        .show {
            display: block;
        }

        .myInput {
            display: inline;
            background-position: 8px 12px;
            background-repeat: no-repeat;
            width: 200%;
            height: 40px;
            font-size: 16px;
            border: 1px solid #ddd;
            padding: 12px 20px 12px 94px;
            margin-bottom: 12px;
        }
    </style>








    @using GeekBooks.Controllers


    @*

        location.href='@Url.Action("Index", "Book", new
                                                           {
                    currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               removeGenre = @item
                                                           })'




    *@



    @foreach (var item in GeekBooks.Controllers.BookController.GenreList)

    {

        var change = "";
        var color = "#e0e0e0";
        if (GeekBooks.Controllers.BookController.gL.Contains(item))
        {
            change = "×";
            color = "#e86b2b";
        }
        else
        {
            change = "";
            color = "#e0e0e0";
        }
        <div id="GenreForm" style="display: inline">
            <a id="Xbutton" aria-label="Close Account Info Modal Box" style="position:absolute; border: 5px; width: 20px; height: auto; cursor: pointer;"
               onclick="location.href='@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               removeGenre = @item
                                                           })'">@change</a>
            <a id="GenreButton" style="border: none; outline:none; padding: 10px 16px; background-color: @color; font-size: 15px; width: 18px;
                  display: inline;" onclick="location.href='@Url.Action("Index", "Book", new
                                                           {
                                                               currentFilter = ViewBag.curentFilter,
                                                               authorID = ViewBag.AuthorID,
                                                               searchString = ViewBag.CurrentFilter,
                                                               bookGenre = @item
                                                           })'" >@item</a>

            </div>

        <script>

            var Xbutton = document.getElementById("Xbutton");
          //  var button = document.getElementById("GenreButton");
          //  var form = document.getElementById("GenreForm");

            if (Xbutton.innerHTML == "") {
                form.removeAttribute(Xbutton);
            }



        </script>



        }

        





    </br>
    </br>



    <!--To Do: Implement browsing features-->
    <table class="table">
        <tr>
            <th>
            </th>
            <th>
                @Html.ActionLink("Title", "Index", new
           {
               sortOrder = ViewBag.TitleSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th>
                @Html.ActionLink("Price", "Index", new
           {
               sortOrder = ViewBag.PriceSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th>
                @Html.DisplayName("Genre")
            </th>
            <th>
                @Html.ActionLink("Author", "Index", new
           {
               sortOrder = ViewBag.AuthorSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th width="170px">
                @Html.ActionLink("Rating", "Index", new
           {
               sortOrder = ViewBag.RatingSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th>
                @Html.DisplayName("ISBN")
            </th>
            <th>
                @Html.ActionLink("DatePublished", "Index", new
           {
               sortOrder = ViewBag.DateSortParm,
               currentFilter = ViewBag.curentFilter,
               authorID = ViewBag.AuthorID,
               searchString = ViewBag.CurrentFilter,
               movieGenre = ViewBag.GenreFilter


           })
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @* <img src="@Url.Content(item.BookModel.BookCover)" alt="Image" width="150" height="150" />*@
                    <a href="@Url.Action("Details", "Book", new { id = item.BookModel.ISBN, username = "guest" })" title="@item.BookModel.Title Detail" class="links">
                        <img alt="More Details" src="@Url.Content(Url.Content(item.BookModel.BookCover))" width="120" height="120">
                    </a>
                </td>
                <td>
                    @Html.ActionLink(item.BookModel.Title, "Details", "Book", new { id = item.BookModel.ISBN, username = "guest" }, null)
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.BookModel.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.viewGenres)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AuthorModel.AuthorFirst)
                    @Html.DisplayFor(modelItem => item.AuthorModel.AuthorMiddle)
                    @Html.DisplayFor(modelItem => item.AuthorModel.AuthorLast)
                </td>
                @{
                    var StarRatio = (double)item.reviews * 120.5 / 5;

                }
                <td>
                    <!--@Html.DisplayFor(modelItem => item.reviews)-->
                    <div id="emptyStars" style="background-image: url('/Content/Images/EmptyStars.png'); width: 120px;">
                        <div id="filledStars" style="background-image: url('/Content/Images/FilledStars2.png'); width: @StarRatio.ToString()px; height: 23px;"> </div>
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookModel.ISBN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookModel.DatePublished)
                </td>

                <td>
                    @*  @Html.ActionLink("Add to Wish List", "WishList", new { id = item.BookModel.ISBN })  |
                        @*this is in the book index page*@
                    @*this actionlinkk should call addbooktoshoppingcart from sh*@
                    @* @Html.ActionLink("Add to Shopping Cart", "AddBookToShoppingCart", "ShoppingCart")*@




                    @using (Html.BeginForm("AddBookToShoppingCart", "ShoppingCart"))
                    {

                        @*@Html.HiddenFor(m => m.Select(a => a.ShoppingCart.ISBN), new { Value = item.BookModel.ISBN })
                            @Html.HiddenFor(m => m.Select(a => a.ShoppingCart.Username), new { Value = item.username })
                            @Html.HiddenFor(m => m.Select(a => a.ShoppingCart.Quantity), new { Value = 1 })
                            @Html.HiddenFor(m => m.Select(a => a.ShoppingCart.PriceEach), new { Value = item.BookModel.Price })
                        *@

                        @Html.Hidden("ISBN", item.BookModel.ISBN)
                        @Html.Hidden("Username", "guest")
                        @Html.Hidden("Quantity", 1)
                        @Html.Hidden("Price", item.BookModel.Price)



                        <input type="image" img alt="Add to shopping cart" src="~/Content/Images/AddToCart.png" style=" width: 40px; height: auto;">

                        @*<button type="submit" class="btn btn-primary w-100">Add To Cart</button>*@


                    }

                </td>
            </tr>
        }
    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    <!--Hard Coded Below-->
    @*
        <a href="~/Book/Details/1">
        <img src="~/Content/Books/sorcerersstone.jpg" alt="sorcerersstone" style="width:256px;height:256px;" />
        </a>
        <ng-view />
        <a href="~/Book/Details/2">
        <img src="~/Content/Books/ChamberOfSecrets.jpg" alt="ChamberOfSecrets" style="width:256px;height:256px;" />
        </a>*@
